<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="Dao.PostDao">
    <!-- 自定义结果集 -->
    <resultMap id="Post" type="PostResult">
        <id property="id" column="post_id" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="date" column="date" />
        <association property="admin" javaType="Admin">
            <id property="id" column="admin_id" />
            <result property="username" column="username"/>
        </association>
    </resultMap>

    <!-- 根据条件查询公告 -->
    <select id="findPosts" parameterType="Map" resultMap="PostResult">
        select
            a.admin_id,
            a.username,
            p.post_id,
            p.title,
            p.content,
            p.create_date
        from  admin_db a, post_db p where  p.admin_id = a.admin_id
        <where>
            <if test="title !=null and title !=''">
                and p.title like #{title}
            </if>
        </where>
    </select>

    <!-- 根据条件查询公告数量 -->
    <select id="getCount" parameterType="Map" resultMap="Integer">
        select count(*) from  post_db
        <where>
            <if test="title != null and title != ''">
                and p.title like #{title}
            </if>
        </where>
    </select>

    <!-- 添加公告 -->
    <!-- Mybatis 配置文件 useGeneratedKeys 参数只针对 insert 语句生效，默认为 false。
    当设置为 true 时，表示如果插入的表以自增列为主键，则允许 JDBC 支持自动生成主键，
    并可将自动生成的主键返回。-->
    <insert id="addPost" useGeneratedKeys="true" keyProperty="post_id">
        insert into  post_db(title,content,admin_id,create_date)
        values (#{title},#{content},#{admin_id},#{create_date})
    </insert>

    <!-- 修改公告 -->
    <update id="updatePost" parameterType="Post">
        update  post_db set
        title=#{title}, content=#{content}, admin_id=#{admin_id},create_date=#{date}
        where  post_id=#{id}
    </update>

    <!-- 删除公告 -->
    <delete id="deletePost" parameterType="Integer">
        delete  from  post_db
        where  post_id=#{id}
    </delete>

    <!-- 根据ID查询公告信息 -->
    <select id="getPostById" parameterType="Integer" resultMap="PostResult">
--         select a.admin_id,a.username,p.post_id,p.title,p.content,p.create_date
--         from admin_db a,post_db p where  p.admin_id = a.admin_id and p.post_id = #{id}
        select  a.admin_id,a.username,p.post_id,p.title,p.content,p.create_date
        from admin_db a
        left join  post_db p on p.admin_id = a.admin_id
        <where>
            p.post_id = #{id}
        </where>
    </select>

</mapper>